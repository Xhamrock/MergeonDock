# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1517, 913)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(33, 33, 33);\n"
"font: bold 9pt \"微軟正黑體\"; color: rgb(255,255,255);\n"
"")
        MainWindow.setIconSize(QtCore.QSize(32, 32))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_central = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_central.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_central.setContentsMargins(0, 3, 3, 3)
        self.gridLayout_central.setSpacing(0)
        self.gridLayout_central.setObjectName("gridLayout_central")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.tabWidget = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(500, 0))
        self.tabWidget.setMaximumSize(QtCore.QSize(1000, 16777215))
        self.tabWidget.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("QTabWidget::pane {\n"
"    border: none;\n"
"    background-color: rgb(33, 33, 33);\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    font: bold 14pt \"微軟正黑體\";  \n"
"    color: rgb(25, 25, 25);  \n"
"    background-color: rgb(55, 55, 55);  \n"
"    padding: 10px 15px;  /* 增加 padding 確保字體不被擠壓 */\n"
"    padding-top: 0px;  /* 向下微調字體，避免被裁切 */\n"
"    padding-bottom: 0px;\n"
"    min-width: 100px;  /* 設定更合適的寬度 */\n"
"    min-height: 25px;  /* 設定更合適的高度 */\n"
"    /* 🎨 只讓上方有圓角 */\n"
"    border-top-left-radius: 10px;\n"
"    border-top-right-radius: 10px;\n"
"    \n"
"    /* 底部直線，不要圓角 */\n"
"    border-bottom-left-radius: 0px;\n"
"    border-bottom-right-radius: 0px;\n"
"    \n"
"       /* 只加上左右和上邊的黑邊 */\n"
"    border: 1px solid rgb(60, 60, 60);\n"
"    border-bottom: none;  /* 移除底部邊框 */\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: rgb(33, 33, 33); \n"
"    color: rgb(255, 255, 255);  \n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    background-color: rgb(100, 100, 100);  \n"
"}")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_docking = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_docking.sizePolicy().hasHeightForWidth())
        self.tab_docking.setSizePolicy(sizePolicy)
        self.tab_docking.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.tab_docking.setFont(font)
        self.tab_docking.setAutoFillBackground(False)
        self.tab_docking.setObjectName("tab_docking")
        self.gridLayout_tab_docking = QtWidgets.QGridLayout(self.tab_docking)
        self.gridLayout_tab_docking.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_tab_docking.setContentsMargins(0, 3, 0, 3)
        self.gridLayout_tab_docking.setHorizontalSpacing(6)
        self.gridLayout_tab_docking.setVerticalSpacing(9)
        self.gridLayout_tab_docking.setObjectName("gridLayout_tab_docking")
        self.frame_for_mode_select = QtWidgets.QFrame(self.tab_docking)
        self.frame_for_mode_select.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_mode_select.setStyleSheet("")
        self.frame_for_mode_select.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_mode_select.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_mode_select.setLineWidth(0)
        self.frame_for_mode_select.setObjectName("frame_for_mode_select")
        self.formLayout_node_select = QtWidgets.QFormLayout(self.frame_for_mode_select)
        self.formLayout_node_select.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout_node_select.setContentsMargins(9, 9, 9, 0)
        self.formLayout_node_select.setSpacing(6)
        self.formLayout_node_select.setObjectName("formLayout_node_select")
        self.label_currentmode = QtWidgets.QLabel(self.frame_for_mode_select)
        self.label_currentmode.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color: rgb(255, 255, 255)\n"
"")
        self.label_currentmode.setObjectName("label_currentmode")
        self.formLayout_node_select.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_currentmode)
        self.comboBox_modeselect = QtWidgets.QComboBox(self.frame_for_mode_select)
        self.comboBox_modeselect.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_modeselect.sizePolicy().hasHeightForWidth())
        self.comboBox_modeselect.setSizePolicy(sizePolicy)
        self.comboBox_modeselect.setMinimumSize(QtCore.QSize(240, 30))
        self.comboBox_modeselect.setStyleSheet("font: bold 14pt \"微軟正黑體\";color:rgb(255, 255, 255);\n"
"background-color: rgb(140, 140, 140);")
        self.comboBox_modeselect.setObjectName("comboBox_modeselect")
        self.comboBox_modeselect.addItem("")
        self.comboBox_modeselect.addItem("")
        self.formLayout_node_select.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboBox_modeselect)
        self.gridLayout_tab_docking.addWidget(self.frame_for_mode_select, 0, 0, 1, 1)
        self.frame_for_setup_workdirectory = QtWidgets.QFrame(self.tab_docking)
        self.frame_for_setup_workdirectory.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_setup_workdirectory.setStyleSheet("")
        self.frame_for_setup_workdirectory.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_setup_workdirectory.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_setup_workdirectory.setLineWidth(0)
        self.frame_for_setup_workdirectory.setObjectName("frame_for_setup_workdirectory")
        self.verticalLayout_setup_workdic = QtWidgets.QVBoxLayout(self.frame_for_setup_workdirectory)
        self.verticalLayout_setup_workdic.setContentsMargins(9, 3, 9, 0)
        self.verticalLayout_setup_workdic.setObjectName("verticalLayout_setup_workdic")
        self.pushButton_setupworkdirectory = QtWidgets.QPushButton(self.frame_for_setup_workdirectory)
        self.pushButton_setupworkdirectory.setMinimumSize(QtCore.QSize(300, 0))
        self.pushButton_setupworkdirectory.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 2px 10px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}")
        self.pushButton_setupworkdirectory.setObjectName("pushButton_setupworkdirectory")
        self.verticalLayout_setup_workdic.addWidget(self.pushButton_setupworkdirectory)
        self.textBrowser_workdirectory = QtWidgets.QTextBrowser(self.frame_for_setup_workdirectory)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_workdirectory.sizePolicy().hasHeightForWidth())
        self.textBrowser_workdirectory.setSizePolicy(sizePolicy)
        self.textBrowser_workdirectory.setMaximumSize(QtCore.QSize(16777215, 30))
        self.textBrowser_workdirectory.setSizeIncrement(QtCore.QSize(0, 0))
        self.textBrowser_workdirectory.setBaseSize(QtCore.QSize(0, 0))
        self.textBrowser_workdirectory.setStyleSheet("font: 9pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"")
        self.textBrowser_workdirectory.setFrameShape(QtWidgets.QFrame.Box)
        self.textBrowser_workdirectory.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_workdirectory.setLineWidth(1)
        self.textBrowser_workdirectory.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_workdirectory.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.textBrowser_workdirectory.setTabStopDistance(80.0)
        self.textBrowser_workdirectory.setObjectName("textBrowser_workdirectory")
        self.verticalLayout_setup_workdic.addWidget(self.textBrowser_workdirectory)
        self.gridLayout_tab_docking.addWidget(self.frame_for_setup_workdirectory, 1, 0, 1, 1)
        self.frame_for_uploadbuttons = QtWidgets.QFrame(self.tab_docking)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_for_uploadbuttons.sizePolicy().hasHeightForWidth())
        self.frame_for_uploadbuttons.setSizePolicy(sizePolicy)
        self.frame_for_uploadbuttons.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_uploadbuttons.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_uploadbuttons.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_uploadbuttons.setLineWidth(0)
        self.frame_for_uploadbuttons.setObjectName("frame_for_uploadbuttons")
        self.horizontalLayout_uploadbuttons = QtWidgets.QHBoxLayout(self.frame_for_uploadbuttons)
        self.horizontalLayout_uploadbuttons.setContentsMargins(-1, 9, -1, -1)
        self.horizontalLayout_uploadbuttons.setObjectName("horizontalLayout_uploadbuttons")
        self.pushButton_uploadreceptor = QtWidgets.QPushButton(self.frame_for_uploadbuttons)
        self.pushButton_uploadreceptor.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_uploadreceptor.sizePolicy().hasHeightForWidth())
        self.pushButton_uploadreceptor.setSizePolicy(sizePolicy)
        self.pushButton_uploadreceptor.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_uploadreceptor.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_uploadreceptor.setObjectName("pushButton_uploadreceptor")
        self.horizontalLayout_uploadbuttons.addWidget(self.pushButton_uploadreceptor)
        self.pushButton_uploadligands = QtWidgets.QPushButton(self.frame_for_uploadbuttons)
        self.pushButton_uploadligands.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_uploadligands.sizePolicy().hasHeightForWidth())
        self.pushButton_uploadligands.setSizePolicy(sizePolicy)
        self.pushButton_uploadligands.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_uploadligands.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_uploadligands.setObjectName("pushButton_uploadligands")
        self.horizontalLayout_uploadbuttons.addWidget(self.pushButton_uploadligands)
        self.pushButton_uploadflexible = QtWidgets.QPushButton(self.frame_for_uploadbuttons)
        self.pushButton_uploadflexible.setEnabled(False)
        self.pushButton_uploadflexible.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_uploadflexible.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_uploadflexible.setObjectName("pushButton_uploadflexible")
        self.horizontalLayout_uploadbuttons.addWidget(self.pushButton_uploadflexible)
        self.gridLayout_tab_docking.addWidget(self.frame_for_uploadbuttons, 2, 0, 1, 1)
        self.frame_for_listshow = QtWidgets.QFrame(self.tab_docking)
        self.frame_for_listshow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_listshow.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_listshow.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_listshow.setLineWidth(0)
        self.frame_for_listshow.setObjectName("frame_for_listshow")
        self.verticalLayout_listshow = QtWidgets.QVBoxLayout(self.frame_for_listshow)
        self.verticalLayout_listshow.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_listshow.setSpacing(6)
        self.verticalLayout_listshow.setObjectName("verticalLayout_listshow")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_for_listshow)
        self.stackedWidget.setEnabled(True)
        self.stackedWidget.setToolTip("")
        self.stackedWidget.setAccessibleDescription("")
        self.stackedWidget.setStyleSheet("font: 12pt \"微軟正黑體\";\n"
"color: rgb(0, 0, 0);")
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.stackedWidget.setLineWidth(0)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_show_all_input = QtWidgets.QWidget()
        self.page_show_all_input.setEnabled(True)
        self.page_show_all_input.setObjectName("page_show_all_input")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.page_show_all_input)
        self.gridLayout_5.setContentsMargins(-1, -1, 9, -1)
        self.gridLayout_5.setSpacing(6)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tableWidget_show_receptor = QtWidgets.QTableWidget(self.page_show_all_input)
        self.tableWidget_show_receptor.setMinimumSize(QtCore.QSize(0, 100))
        self.tableWidget_show_receptor.setMaximumSize(QtCore.QSize(16777215, 160))
        self.tableWidget_show_receptor.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_show_receptor.setObjectName("tableWidget_show_receptor")
        self.tableWidget_show_receptor.setColumnCount(2)
        self.tableWidget_show_receptor.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setText("Receptor")
        self.tableWidget_show_receptor.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_show_receptor.setHorizontalHeaderItem(1, item)
        self.tableWidget_show_receptor.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_show_receptor.horizontalHeader().setStretchLastSection(False)
        self.tableWidget_show_receptor.verticalHeader().setVisible(False)
        self.tableWidget_show_receptor.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget_show_receptor.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget_show_receptor.verticalHeader().setStretchLastSection(False)
        self.horizontalLayout.addWidget(self.tableWidget_show_receptor)
        self.tableWidget_show_refligands = QtWidgets.QTableWidget(self.page_show_all_input)
        self.tableWidget_show_refligands.setMinimumSize(QtCore.QSize(0, 100))
        self.tableWidget_show_refligands.setMaximumSize(QtCore.QSize(16777215, 160))
        self.tableWidget_show_refligands.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_show_refligands.setObjectName("tableWidget_show_refligands")
        self.tableWidget_show_refligands.setColumnCount(2)
        self.tableWidget_show_refligands.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_show_refligands.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_show_refligands.setHorizontalHeaderItem(1, item)
        self.horizontalLayout.addWidget(self.tableWidget_show_refligands)
        self.gridLayout_5.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.tableWidget_show_ligands = QtWidgets.QTableWidget(self.page_show_all_input)
        self.tableWidget_show_ligands.setMinimumSize(QtCore.QSize(0, 350))
        self.tableWidget_show_ligands.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_show_ligands.setObjectName("tableWidget_show_ligands")
        self.tableWidget_show_ligands.setColumnCount(2)
        self.tableWidget_show_ligands.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_show_ligands.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_show_ligands.setHorizontalHeaderItem(1, item)
        self.gridLayout_5.addWidget(self.tableWidget_show_ligands, 1, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_show_all_input)
        self.page_gridbox_setting = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_gridbox_setting.sizePolicy().hasHeightForWidth())
        self.page_gridbox_setting.setSizePolicy(sizePolicy)
        self.page_gridbox_setting.setMinimumSize(QtCore.QSize(0, 0))
        self.page_gridbox_setting.setStyleSheet("font: bold 14pt \"微軟正黑體\";color:rgb(255, 255, 255);")
        self.page_gridbox_setting.setObjectName("page_gridbox_setting")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.page_gridbox_setting)
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter_center_title = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_center_title.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_center_title.setObjectName("splitter_center_title")
        self.label_center_title = QtWidgets.QLabel(self.splitter_center_title)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_center_title.sizePolicy().hasHeightForWidth())
        self.label_center_title.setSizePolicy(sizePolicy)
        self.label_center_title.setObjectName("label_center_title")
        self.pushButton_use_ref_ligands = QtWidgets.QPushButton(self.splitter_center_title)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_use_ref_ligands.sizePolicy().hasHeightForWidth())
        self.pushButton_use_ref_ligands.setSizePolicy(sizePolicy)
        self.pushButton_use_ref_ligands.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_use_ref_ligands.setMaximumSize(QtCore.QSize(300, 35))
        self.pushButton_use_ref_ligands.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.pushButton_use_ref_ligands.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_use_ref_ligands.setObjectName("pushButton_use_ref_ligands")
        self.verticalLayout.addWidget(self.splitter_center_title)
        self.splitter_center_X = QtWidgets.QSplitter(self.page_gridbox_setting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_center_X.sizePolicy().hasHeightForWidth())
        self.splitter_center_X.setSizePolicy(sizePolicy)
        self.splitter_center_X.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_center_X.setObjectName("splitter_center_X")
        self.label_centerX = QtWidgets.QLabel(self.splitter_center_X)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_centerX.sizePolicy().hasHeightForWidth())
        self.label_centerX.setSizePolicy(sizePolicy)
        self.label_centerX.setMinimumSize(QtCore.QSize(0, 0))
        self.label_centerX.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_centerX.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_centerX.setObjectName("label_centerX")
        self.doubleSpinBox_centerX = QtWidgets.QDoubleSpinBox(self.splitter_center_X)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_centerX.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_centerX.setSizePolicy(sizePolicy)
        self.doubleSpinBox_centerX.setMaximumSize(QtCore.QSize(110, 30))
        self.doubleSpinBox_centerX.setDecimals(3)
        self.doubleSpinBox_centerX.setMinimum(-500.0)
        self.doubleSpinBox_centerX.setMaximum(500.0)
        self.doubleSpinBox_centerX.setObjectName("doubleSpinBox_centerX")
        self.horizontalSlider_centerX = QtWidgets.QSlider(self.splitter_center_X)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_centerX.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_centerX.setSizePolicy(sizePolicy)
        self.horizontalSlider_centerX.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_centerX.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_centerX.setSizeIncrement(QtCore.QSize(0, 0))
        self.horizontalSlider_centerX.setMinimum(-500000)
        self.horizontalSlider_centerX.setMaximum(500000)
        self.horizontalSlider_centerX.setSingleStep(1)
        self.horizontalSlider_centerX.setPageStep(10)
        self.horizontalSlider_centerX.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_centerX.setInvertedAppearance(False)
        self.horizontalSlider_centerX.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSlider_centerX.setObjectName("horizontalSlider_centerX")
        self.verticalLayout.addWidget(self.splitter_center_X)
        self.splitter_centerY = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_centerY.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_centerY.setObjectName("splitter_centerY")
        self.label_centerY = QtWidgets.QLabel(self.splitter_centerY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_centerY.sizePolicy().hasHeightForWidth())
        self.label_centerY.setSizePolicy(sizePolicy)
        self.label_centerY.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_centerY.setObjectName("label_centerY")
        self.doubleSpinBox_centerY = QtWidgets.QDoubleSpinBox(self.splitter_centerY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_centerY.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_centerY.setSizePolicy(sizePolicy)
        self.doubleSpinBox_centerY.setMaximumSize(QtCore.QSize(110, 30))
        self.doubleSpinBox_centerY.setDecimals(3)
        self.doubleSpinBox_centerY.setMinimum(-500.0)
        self.doubleSpinBox_centerY.setMaximum(500.0)
        self.doubleSpinBox_centerY.setObjectName("doubleSpinBox_centerY")
        self.horizontalSlider_centerY = QtWidgets.QSlider(self.splitter_centerY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_centerY.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_centerY.setSizePolicy(sizePolicy)
        self.horizontalSlider_centerY.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_centerY.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_centerY.setMinimum(-500000)
        self.horizontalSlider_centerY.setMaximum(500000)
        self.horizontalSlider_centerY.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_centerY.setInvertedAppearance(False)
        self.horizontalSlider_centerY.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSlider_centerY.setObjectName("horizontalSlider_centerY")
        self.verticalLayout.addWidget(self.splitter_centerY)
        self.splitter_centerZ = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_centerZ.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_centerZ.setObjectName("splitter_centerZ")
        self.label_centerZ = QtWidgets.QLabel(self.splitter_centerZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_centerZ.sizePolicy().hasHeightForWidth())
        self.label_centerZ.setSizePolicy(sizePolicy)
        self.label_centerZ.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_centerZ.setObjectName("label_centerZ")
        self.doubleSpinBox_centerZ = QtWidgets.QDoubleSpinBox(self.splitter_centerZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_centerZ.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_centerZ.setSizePolicy(sizePolicy)
        self.doubleSpinBox_centerZ.setMaximumSize(QtCore.QSize(110, 30))
        self.doubleSpinBox_centerZ.setDecimals(3)
        self.doubleSpinBox_centerZ.setMinimum(-500.0)
        self.doubleSpinBox_centerZ.setMaximum(500.0)
        self.doubleSpinBox_centerZ.setObjectName("doubleSpinBox_centerZ")
        self.horizontalSlider_centerZ = QtWidgets.QSlider(self.splitter_centerZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_centerZ.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_centerZ.setSizePolicy(sizePolicy)
        self.horizontalSlider_centerZ.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_centerZ.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_centerZ.setMinimum(-500000)
        self.horizontalSlider_centerZ.setMaximum(500000)
        self.horizontalSlider_centerZ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_centerZ.setInvertedAppearance(False)
        self.horizontalSlider_centerZ.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSlider_centerZ.setObjectName("horizontalSlider_centerZ")
        self.verticalLayout.addWidget(self.splitter_centerZ)
        self.line_sep_center_size = QtWidgets.QFrame(self.page_gridbox_setting)
        self.line_sep_center_size.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_sep_center_size.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_sep_center_size.setObjectName("line_sep_center_size")
        self.verticalLayout.addWidget(self.line_sep_center_size)
        self.label_size_title = QtWidgets.QLabel(self.page_gridbox_setting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_size_title.sizePolicy().hasHeightForWidth())
        self.label_size_title.setSizePolicy(sizePolicy)
        self.label_size_title.setObjectName("label_size_title")
        self.verticalLayout.addWidget(self.label_size_title)
        self.splitter_sizeX = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_sizeX.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_sizeX.setObjectName("splitter_sizeX")
        self.label_sizeX = QtWidgets.QLabel(self.splitter_sizeX)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_sizeX.sizePolicy().hasHeightForWidth())
        self.label_sizeX.setSizePolicy(sizePolicy)
        self.label_sizeX.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_sizeX.setObjectName("label_sizeX")
        self.spinBox_sizeX = QtWidgets.QSpinBox(self.splitter_sizeX)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBox_sizeX.sizePolicy().hasHeightForWidth())
        self.spinBox_sizeX.setSizePolicy(sizePolicy)
        self.spinBox_sizeX.setMinimumSize(QtCore.QSize(0, 0))
        self.spinBox_sizeX.setMaximumSize(QtCore.QSize(100, 30))
        self.spinBox_sizeX.setMaximum(500)
        self.spinBox_sizeX.setProperty("value", 40)
        self.spinBox_sizeX.setObjectName("spinBox_sizeX")
        self.horizontalSlider_sizeX = QtWidgets.QSlider(self.splitter_sizeX)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_sizeX.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_sizeX.setSizePolicy(sizePolicy)
        self.horizontalSlider_sizeX.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_sizeX.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_sizeX.setMinimum(0)
        self.horizontalSlider_sizeX.setMaximum(500)
        self.horizontalSlider_sizeX.setProperty("value", 40)
        self.horizontalSlider_sizeX.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_sizeX.setObjectName("horizontalSlider_sizeX")
        self.verticalLayout.addWidget(self.splitter_sizeX)
        self.splitter_sizeY = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_sizeY.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_sizeY.setObjectName("splitter_sizeY")
        self.label_sizeY = QtWidgets.QLabel(self.splitter_sizeY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_sizeY.sizePolicy().hasHeightForWidth())
        self.label_sizeY.setSizePolicy(sizePolicy)
        self.label_sizeY.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_sizeY.setObjectName("label_sizeY")
        self.spinBox_sizeY = QtWidgets.QSpinBox(self.splitter_sizeY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBox_sizeY.sizePolicy().hasHeightForWidth())
        self.spinBox_sizeY.setSizePolicy(sizePolicy)
        self.spinBox_sizeY.setMinimumSize(QtCore.QSize(0, 0))
        self.spinBox_sizeY.setMaximumSize(QtCore.QSize(100, 30))
        self.spinBox_sizeY.setMaximum(500)
        self.spinBox_sizeY.setProperty("value", 40)
        self.spinBox_sizeY.setObjectName("spinBox_sizeY")
        self.horizontalSlider_sizeY = QtWidgets.QSlider(self.splitter_sizeY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_sizeY.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_sizeY.setSizePolicy(sizePolicy)
        self.horizontalSlider_sizeY.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_sizeY.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_sizeY.setMinimum(0)
        self.horizontalSlider_sizeY.setMaximum(500)
        self.horizontalSlider_sizeY.setProperty("value", 40)
        self.horizontalSlider_sizeY.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_sizeY.setObjectName("horizontalSlider_sizeY")
        self.verticalLayout.addWidget(self.splitter_sizeY)
        self.splitter_sizeZ = QtWidgets.QSplitter(self.page_gridbox_setting)
        self.splitter_sizeZ.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_sizeZ.setObjectName("splitter_sizeZ")
        self.label_sizeZ = QtWidgets.QLabel(self.splitter_sizeZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_sizeZ.sizePolicy().hasHeightForWidth())
        self.label_sizeZ.setSizePolicy(sizePolicy)
        self.label_sizeZ.setMaximumSize(QtCore.QSize(20, 16777215))
        self.label_sizeZ.setObjectName("label_sizeZ")
        self.spinBox_sizeZ = QtWidgets.QSpinBox(self.splitter_sizeZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBox_sizeZ.sizePolicy().hasHeightForWidth())
        self.spinBox_sizeZ.setSizePolicy(sizePolicy)
        self.spinBox_sizeZ.setMinimumSize(QtCore.QSize(0, 0))
        self.spinBox_sizeZ.setMaximumSize(QtCore.QSize(100, 30))
        self.spinBox_sizeZ.setMaximum(500)
        self.spinBox_sizeZ.setProperty("value", 40)
        self.spinBox_sizeZ.setObjectName("spinBox_sizeZ")
        self.horizontalSlider_sizeZ = QtWidgets.QSlider(self.splitter_sizeZ)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider_sizeZ.sizePolicy().hasHeightForWidth())
        self.horizontalSlider_sizeZ.setSizePolicy(sizePolicy)
        self.horizontalSlider_sizeZ.setMinimumSize(QtCore.QSize(0, 0))
        self.horizontalSlider_sizeZ.setMaximumSize(QtCore.QSize(200, 16777215))
        self.horizontalSlider_sizeZ.setMinimum(0)
        self.horizontalSlider_sizeZ.setMaximum(500)
        self.horizontalSlider_sizeZ.setProperty("value", 40)
        self.horizontalSlider_sizeZ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_sizeZ.setObjectName("horizontalSlider_sizeZ")
        self.verticalLayout.addWidget(self.splitter_sizeZ)
        self.splitter_spacing = QtWidgets.QSplitter(self.page_gridbox_setting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_spacing.sizePolicy().hasHeightForWidth())
        self.splitter_spacing.setSizePolicy(sizePolicy)
        self.splitter_spacing.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.splitter_spacing.setFrameShadow(QtWidgets.QFrame.Plain)
        self.splitter_spacing.setLineWidth(1)
        self.splitter_spacing.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_spacing.setHandleWidth(15)
        self.splitter_spacing.setObjectName("splitter_spacing")
        self.label_spacing = QtWidgets.QLabel(self.splitter_spacing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_spacing.sizePolicy().hasHeightForWidth())
        self.label_spacing.setSizePolicy(sizePolicy)
        self.label_spacing.setObjectName("label_spacing")
        self.doubleSpinBox_spacing = QtWidgets.QDoubleSpinBox(self.splitter_spacing)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_spacing.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_spacing.setSizePolicy(sizePolicy)
        self.doubleSpinBox_spacing.setMinimumSize(QtCore.QSize(0, 0))
        self.doubleSpinBox_spacing.setMaximumSize(QtCore.QSize(100, 30))
        self.doubleSpinBox_spacing.setDecimals(3)
        self.doubleSpinBox_spacing.setMaximum(99999.999)
        self.doubleSpinBox_spacing.setSingleStep(0.01)
        self.doubleSpinBox_spacing.setProperty("value", 0.375)
        self.doubleSpinBox_spacing.setObjectName("doubleSpinBox_spacing")
        self.verticalLayout.addWidget(self.splitter_spacing)
        self.stackedWidget.addWidget(self.page_gridbox_setting)
        self.page_parameters_setting = QtWidgets.QWidget()
        self.page_parameters_setting.setStyleSheet("font: bold 14pt \"微軟正黑體\";color:rgb(255, 255, 255);")
        self.page_parameters_setting.setObjectName("page_parameters_setting")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page_parameters_setting)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_scoring = QtWidgets.QHBoxLayout()
        self.horizontalLayout_scoring.setContentsMargins(-1, -1, 50, -1)
        self.horizontalLayout_scoring.setSpacing(35)
        self.horizontalLayout_scoring.setObjectName("horizontalLayout_scoring")
        self.label_scoring_fucntion = QtWidgets.QLabel(self.page_parameters_setting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_scoring_fucntion.sizePolicy().hasHeightForWidth())
        self.label_scoring_fucntion.setSizePolicy(sizePolicy)
        self.label_scoring_fucntion.setObjectName("label_scoring_fucntion")
        self.horizontalLayout_scoring.addWidget(self.label_scoring_fucntion)
        self.radioButton_vina = QtWidgets.QRadioButton(self.page_parameters_setting)
        self.radioButton_vina.setChecked(True)
        self.radioButton_vina.setObjectName("radioButton_vina")
        self.buttonGroup_scoring_function = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup_scoring_function.setObjectName("buttonGroup_scoring_function")
        self.buttonGroup_scoring_function.addButton(self.radioButton_vina)
        self.horizontalLayout_scoring.addWidget(self.radioButton_vina)
        self.radioButton_autodock4 = QtWidgets.QRadioButton(self.page_parameters_setting)
        self.radioButton_autodock4.setObjectName("radioButton_autodock4")
        self.buttonGroup_scoring_function.addButton(self.radioButton_autodock4)
        self.horizontalLayout_scoring.addWidget(self.radioButton_autodock4)
        self.horizontalLayout_scoring.setStretch(0, 40)
        self.verticalLayout_3.addLayout(self.horizontalLayout_scoring)
        self.horizontalLayout_exhaustiveness = QtWidgets.QHBoxLayout()
        self.horizontalLayout_exhaustiveness.setContentsMargins(-1, -1, 150, -1)
        self.horizontalLayout_exhaustiveness.setSpacing(6)
        self.horizontalLayout_exhaustiveness.setObjectName("horizontalLayout_exhaustiveness")
        self.label_exhaustiveness = QtWidgets.QLabel(self.page_parameters_setting)
        self.label_exhaustiveness.setObjectName("label_exhaustiveness")
        self.horizontalLayout_exhaustiveness.addWidget(self.label_exhaustiveness)
        self.spinBox_exhaustiveness = QtWidgets.QSpinBox(self.page_parameters_setting)
        self.spinBox_exhaustiveness.setMaximum(999999999)
        self.spinBox_exhaustiveness.setProperty("value", 32)
        self.spinBox_exhaustiveness.setObjectName("spinBox_exhaustiveness")
        self.horizontalLayout_exhaustiveness.addWidget(self.spinBox_exhaustiveness)
        self.horizontalLayout_exhaustiveness.setStretch(0, 1)
        self.verticalLayout_3.addLayout(self.horizontalLayout_exhaustiveness)
        self.horizontalLayout_pose = QtWidgets.QHBoxLayout()
        self.horizontalLayout_pose.setContentsMargins(-1, -1, 150, -1)
        self.horizontalLayout_pose.setObjectName("horizontalLayout_pose")
        self.label_pose = QtWidgets.QLabel(self.page_parameters_setting)
        self.label_pose.setObjectName("label_pose")
        self.horizontalLayout_pose.addWidget(self.label_pose)
        self.spinBox_pose = QtWidgets.QSpinBox(self.page_parameters_setting)
        self.spinBox_pose.setMaximum(999999999)
        self.spinBox_pose.setProperty("value", 2)
        self.spinBox_pose.setObjectName("spinBox_pose")
        self.horizontalLayout_pose.addWidget(self.spinBox_pose)
        self.horizontalLayout_pose.setStretch(0, 1)
        self.verticalLayout_3.addLayout(self.horizontalLayout_pose)
        self.horizontalLayout_verbosity = QtWidgets.QHBoxLayout()
        self.horizontalLayout_verbosity.setContentsMargins(-1, -1, 50, -1)
        self.horizontalLayout_verbosity.setSpacing(35)
        self.horizontalLayout_verbosity.setObjectName("horizontalLayout_verbosity")
        self.label_verbosity = QtWidgets.QLabel(self.page_parameters_setting)
        self.label_verbosity.setObjectName("label_verbosity")
        self.horizontalLayout_verbosity.addWidget(self.label_verbosity)
        self.radioButton_verbosity_1 = QtWidgets.QRadioButton(self.page_parameters_setting)
        self.radioButton_verbosity_1.setChecked(True)
        self.radioButton_verbosity_1.setObjectName("radioButton_verbosity_1")
        self.buttonGroup_verbosity = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup_verbosity.setObjectName("buttonGroup_verbosity")
        self.buttonGroup_verbosity.addButton(self.radioButton_verbosity_1)
        self.horizontalLayout_verbosity.addWidget(self.radioButton_verbosity_1)
        self.radioButton_verbosity_2 = QtWidgets.QRadioButton(self.page_parameters_setting)
        self.radioButton_verbosity_2.setObjectName("radioButton_verbosity_2")
        self.buttonGroup_verbosity.addButton(self.radioButton_verbosity_2)
        self.horizontalLayout_verbosity.addWidget(self.radioButton_verbosity_2)
        self.horizontalLayout_verbosity.setStretch(0, 40)
        self.verticalLayout_3.addLayout(self.horizontalLayout_verbosity)
        self.horizontalLayout_cpu = QtWidgets.QHBoxLayout()
        self.horizontalLayout_cpu.setContentsMargins(-1, -1, 70, -1)
        self.horizontalLayout_cpu.setSpacing(6)
        self.horizontalLayout_cpu.setObjectName("horizontalLayout_cpu")
        self.label_cpu = QtWidgets.QLabel(self.page_parameters_setting)
        self.label_cpu.setObjectName("label_cpu")
        self.horizontalLayout_cpu.addWidget(self.label_cpu)
        self.lineEdit_cpu = QtWidgets.QLineEdit(self.page_parameters_setting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_cpu.sizePolicy().hasHeightForWidth())
        self.lineEdit_cpu.setSizePolicy(sizePolicy)
        self.lineEdit_cpu.setCursorPosition(0)
        self.lineEdit_cpu.setObjectName("lineEdit_cpu")
        self.horizontalLayout_cpu.addWidget(self.lineEdit_cpu)
        self.horizontalLayout_cpu.setStretch(0, 1)
        self.verticalLayout_3.addLayout(self.horizontalLayout_cpu)
        self.horizontalLayout_seed = QtWidgets.QHBoxLayout()
        self.horizontalLayout_seed.setContentsMargins(-1, -1, 70, -1)
        self.horizontalLayout_seed.setObjectName("horizontalLayout_seed")
        self.label_seed = QtWidgets.QLabel(self.page_parameters_setting)
        self.label_seed.setObjectName("label_seed")
        self.horizontalLayout_seed.addWidget(self.label_seed)
        self.lineEdit_seed = QtWidgets.QLineEdit(self.page_parameters_setting)
        self.lineEdit_seed.setObjectName("lineEdit_seed")
        self.horizontalLayout_seed.addWidget(self.lineEdit_seed)
        self.horizontalLayout_seed.setStretch(0, 1)
        self.verticalLayout_3.addLayout(self.horizontalLayout_seed)
        self.stackedWidget.addWidget(self.page_parameters_setting)
        self.verticalLayout_listshow.addWidget(self.stackedWidget)
        self.gridLayout_tab_docking.addWidget(self.frame_for_listshow, 3, 0, 1, 1)
        self.frame_for_grid_parameters = QtWidgets.QFrame(self.tab_docking)
        self.frame_for_grid_parameters.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_grid_parameters.setStyleSheet("")
        self.frame_for_grid_parameters.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_grid_parameters.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_grid_parameters.setLineWidth(0)
        self.frame_for_grid_parameters.setObjectName("frame_for_grid_parameters")
        self.horizontalLayout_grid_parameters = QtWidgets.QHBoxLayout(self.frame_for_grid_parameters)
        self.horizontalLayout_grid_parameters.setContentsMargins(9, 0, 9, 0)
        self.horizontalLayout_grid_parameters.setSpacing(6)
        self.horizontalLayout_grid_parameters.setObjectName("horizontalLayout_grid_parameters")
        self.pushButton_setgridbox = QtWidgets.QPushButton(self.frame_for_grid_parameters)
        self.pushButton_setgridbox.setEnabled(False)
        self.pushButton_setgridbox.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_setgridbox.setObjectName("pushButton_setgridbox")
        self.horizontalLayout_grid_parameters.addWidget(self.pushButton_setgridbox)
        self.pushButton_setparameter = QtWidgets.QPushButton(self.frame_for_grid_parameters)
        self.pushButton_setparameter.setEnabled(False)
        self.pushButton_setparameter.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_setparameter.setObjectName("pushButton_setparameter")
        self.horizontalLayout_grid_parameters.addWidget(self.pushButton_setparameter)
        self.gridLayout_tab_docking.addWidget(self.frame_for_grid_parameters, 4, 0, 1, 1)
        self.frame_for_dockbutoon_process = QtWidgets.QFrame(self.tab_docking)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_for_dockbutoon_process.sizePolicy().hasHeightForWidth())
        self.frame_for_dockbutoon_process.setSizePolicy(sizePolicy)
        self.frame_for_dockbutoon_process.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_for_dockbutoon_process.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_for_dockbutoon_process.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_for_dockbutoon_process.setLineWidth(0)
        self.frame_for_dockbutoon_process.setObjectName("frame_for_dockbutoon_process")
        self.horizontalLayout_dockbutton_process = QtWidgets.QHBoxLayout(self.frame_for_dockbutoon_process)
        self.horizontalLayout_dockbutton_process.setContentsMargins(-1, 9, -1, -1)
        self.horizontalLayout_dockbutton_process.setSpacing(6)
        self.horizontalLayout_dockbutton_process.setObjectName("horizontalLayout_dockbutton_process")
        self.pushButton_dockingbutton = QtWidgets.QPushButton(self.frame_for_dockbutoon_process)
        self.pushButton_dockingbutton.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_dockingbutton.sizePolicy().hasHeightForWidth())
        self.pushButton_dockingbutton.setSizePolicy(sizePolicy)
        self.pushButton_dockingbutton.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 8px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_dockingbutton.setCheckable(False)
        self.pushButton_dockingbutton.setObjectName("pushButton_dockingbutton")
        self.horizontalLayout_dockbutton_process.addWidget(self.pushButton_dockingbutton)
        self.progressBar = QtWidgets.QProgressBar(self.frame_for_dockbutoon_process)
        self.progressBar.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.horizontalLayout_dockbutton_process.addWidget(self.progressBar)
        self.gridLayout_tab_docking.addWidget(self.frame_for_dockbutoon_process, 5, 0, 1, 1)
        self.tabWidget.addTab(self.tab_docking, "")
        self.tab_analysis = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_analysis.sizePolicy().hasHeightForWidth())
        self.tab_analysis.setSizePolicy(sizePolicy)
        self.tab_analysis.setMinimumSize(QtCore.QSize(0, 0))
        self.tab_analysis.setAutoFillBackground(False)
        self.tab_analysis.setObjectName("tab_analysis")
        self.gridLayout_tab_analysis = QtWidgets.QGridLayout(self.tab_analysis)
        self.gridLayout_tab_analysis.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_tab_analysis.setObjectName("gridLayout_tab_analysis")
        self.stackedWidget_analysis = QtWidgets.QStackedWidget(self.tab_analysis)
        self.stackedWidget_analysis.setMinimumSize(QtCore.QSize(490, 840))
        self.stackedWidget_analysis.setStyleSheet("font: 12pt \"微軟正黑體\";\n"
"color: rgb(0, 0, 0);")
        self.stackedWidget_analysis.setLineWidth(0)
        self.stackedWidget_analysis.setObjectName("stackedWidget_analysis")
        self.page_analysis_basic = QtWidgets.QWidget()
        self.page_analysis_basic.setMinimumSize(QtCore.QSize(0, 0))
        self.page_analysis_basic.setStyleSheet("background-color: rgb(33,33,33); ")
        self.page_analysis_basic.setObjectName("page_analysis_basic")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.page_analysis_basic)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_analysis_filter = QtWidgets.QHBoxLayout()
        self.horizontalLayout_analysis_filter.setSpacing(6)
        self.horizontalLayout_analysis_filter.setObjectName("horizontalLayout_analysis_filter")
        self.label_affinity_filter = QtWidgets.QLabel(self.page_analysis_basic)
        self.label_affinity_filter.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"")
        self.label_affinity_filter.setObjectName("label_affinity_filter")
        self.horizontalLayout_analysis_filter.addWidget(self.label_affinity_filter)
        self.doubleSpinBox_low_affinity = QtWidgets.QDoubleSpinBox(self.page_analysis_basic)
        self.doubleSpinBox_low_affinity.setMinimumSize(QtCore.QSize(100, 0))
        self.doubleSpinBox_low_affinity.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"background-color: rgb(60, 60, 60);")
        self.doubleSpinBox_low_affinity.setDecimals(3)
        self.doubleSpinBox_low_affinity.setMinimum(-99.0)
        self.doubleSpinBox_low_affinity.setProperty("value", -20.0)
        self.doubleSpinBox_low_affinity.setObjectName("doubleSpinBox_low_affinity")
        self.horizontalLayout_analysis_filter.addWidget(self.doubleSpinBox_low_affinity)
        self.label_affinity_filter_symbol = QtWidgets.QLabel(self.page_analysis_basic)
        self.label_affinity_filter_symbol.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"")
        self.label_affinity_filter_symbol.setObjectName("label_affinity_filter_symbol")
        self.horizontalLayout_analysis_filter.addWidget(self.label_affinity_filter_symbol)
        self.doubleSpinBox_high_affinity = QtWidgets.QDoubleSpinBox(self.page_analysis_basic)
        self.doubleSpinBox_high_affinity.setMinimumSize(QtCore.QSize(100, 0))
        self.doubleSpinBox_high_affinity.setStyleSheet("font: bold 14pt \"微軟正黑體\"; color:rgb(255, 255, 255);\n"
"background-color: rgb(60, 60, 60);")
        self.doubleSpinBox_high_affinity.setDecimals(3)
        self.doubleSpinBox_high_affinity.setMinimum(-99.0)
        self.doubleSpinBox_high_affinity.setProperty("value", 10.0)
        self.doubleSpinBox_high_affinity.setObjectName("doubleSpinBox_high_affinity")
        self.horizontalLayout_analysis_filter.addWidget(self.doubleSpinBox_high_affinity)
        self.pushButton_analysis_search = QtWidgets.QPushButton(self.page_analysis_basic)
        self.pushButton_analysis_search.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButton_analysis_search.setMaximumSize(QtCore.QSize(50, 16777215))
        self.pushButton_analysis_search.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_search.setObjectName("pushButton_analysis_search")
        self.horizontalLayout_analysis_filter.addWidget(self.pushButton_analysis_search)
        self.pushButton_analysis_reset = QtWidgets.QPushButton(self.page_analysis_basic)
        self.pushButton_analysis_reset.setMaximumSize(QtCore.QSize(50, 16777215))
        self.pushButton_analysis_reset.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_reset.setObjectName("pushButton_analysis_reset")
        self.horizontalLayout_analysis_filter.addWidget(self.pushButton_analysis_reset)
        self.gridLayout_2.addLayout(self.horizontalLayout_analysis_filter, 2, 0, 1, 1)
        self.tableWidget_analysis_receptor = QtWidgets.QTableWidget(self.page_analysis_basic)
        self.tableWidget_analysis_receptor.setMaximumSize(QtCore.QSize(16777215, 120))
        self.tableWidget_analysis_receptor.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_analysis_receptor.setObjectName("tableWidget_analysis_receptor")
        self.tableWidget_analysis_receptor.setColumnCount(3)
        self.tableWidget_analysis_receptor.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_receptor.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_receptor.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_receptor.setHorizontalHeaderItem(2, item)
        self.gridLayout_2.addWidget(self.tableWidget_analysis_receptor, 1, 0, 1, 1)
        self.tableWidget_analysis_ligands = QtWidgets.QTableWidget(self.page_analysis_basic)
        self.tableWidget_analysis_ligands.setMinimumSize(QtCore.QSize(0, 350))
        self.tableWidget_analysis_ligands.setWhatsThis("")
        self.tableWidget_analysis_ligands.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_analysis_ligands.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_analysis_ligands.setShowGrid(True)
        self.tableWidget_analysis_ligands.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget_analysis_ligands.setWordWrap(True)
        self.tableWidget_analysis_ligands.setCornerButtonEnabled(True)
        self.tableWidget_analysis_ligands.setObjectName("tableWidget_analysis_ligands")
        self.tableWidget_analysis_ligands.setColumnCount(4)
        self.tableWidget_analysis_ligands.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_ligands.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_ligands.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_ligands.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_analysis_ligands.setHorizontalHeaderItem(3, item)
        self.tableWidget_analysis_ligands.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_analysis_ligands.horizontalHeader().setDefaultSectionSize(100)
        self.tableWidget_analysis_ligands.horizontalHeader().setHighlightSections(True)
        self.tableWidget_analysis_ligands.horizontalHeader().setMinimumSectionSize(34)
        self.tableWidget_analysis_ligands.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget_analysis_ligands.horizontalHeader().setStretchLastSection(False)
        self.tableWidget_analysis_ligands.verticalHeader().setCascadingSectionResizes(False)
        self.gridLayout_2.addWidget(self.tableWidget_analysis_ligands, 3, 0, 1, 1)
        self.frame_analysis_load_add = QtWidgets.QFrame(self.page_analysis_basic)
        self.frame_analysis_load_add.setMaximumSize(QtCore.QSize(500, 16777215))
        self.frame_analysis_load_add.setLineWidth(0)
        self.frame_analysis_load_add.setObjectName("frame_analysis_load_add")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_analysis_load_add)
        self.gridLayout.setContentsMargins(-1, 0, -1, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_analysis_load = QtWidgets.QPushButton(self.frame_analysis_load_add)
        self.pushButton_analysis_load.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_load.setObjectName("pushButton_analysis_load")
        self.gridLayout.addWidget(self.pushButton_analysis_load, 0, 0, 1, 1)
        self.pushButton_analysis_add = QtWidgets.QPushButton(self.frame_analysis_load_add)
        self.pushButton_analysis_add.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_add.setObjectName("pushButton_analysis_add")
        self.gridLayout.addWidget(self.pushButton_analysis_add, 0, 1, 1, 1)
        self.gridLayout_2.addWidget(self.frame_analysis_load_add, 0, 0, 1, 1)
        self.frame_analysis_save_button_area = QtWidgets.QFrame(self.page_analysis_basic)
        self.frame_analysis_save_button_area.setMinimumSize(QtCore.QSize(0, 0))
        self.frame_analysis_save_button_area.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_analysis_save_button_area.setLineWidth(0)
        self.frame_analysis_save_button_area.setObjectName("frame_analysis_save_button_area")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_analysis_save_button_area)
        self.gridLayout_4.setContentsMargins(9, 0, 9, 0)
        self.gridLayout_4.setHorizontalSpacing(6)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.pushButton_analysis_save_ligand = QtWidgets.QPushButton(self.frame_analysis_save_button_area)
        self.pushButton_analysis_save_ligand.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_save_ligand.setObjectName("pushButton_analysis_save_ligand")
        self.gridLayout_4.addWidget(self.pushButton_analysis_save_ligand, 1, 0, 1, 1)
        self.pushButton_analysis_save_image = QtWidgets.QPushButton(self.frame_analysis_save_button_area)
        self.pushButton_analysis_save_image.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_save_image.setObjectName("pushButton_analysis_save_image")
        self.gridLayout_4.addWidget(self.pushButton_analysis_save_image, 0, 1, 1, 1)
        self.pushButton_analysis_save_complex = QtWidgets.QPushButton(self.frame_analysis_save_button_area)
        self.pushButton_analysis_save_complex.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_save_complex.setObjectName("pushButton_analysis_save_complex")
        self.gridLayout_4.addWidget(self.pushButton_analysis_save_complex, 0, 0, 1, 1)
        self.pushButton_interaction_analysis = QtWidgets.QPushButton(self.frame_analysis_save_button_area)
        self.pushButton_interaction_analysis.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_interaction_analysis.setObjectName("pushButton_interaction_analysis")
        self.gridLayout_4.addWidget(self.pushButton_interaction_analysis, 1, 1, 1, 1)
        self.gridLayout_2.addWidget(self.frame_analysis_save_button_area, 5, 0, 1, 1)
        self.stackedWidget_analysis.addWidget(self.page_analysis_basic)
        self.page_interaction_analysis = QtWidgets.QWidget()
        self.page_interaction_analysis.setObjectName("page_interaction_analysis")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.page_interaction_analysis)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_interaction_rec_lig_return = QtWidgets.QGridLayout()
        self.gridLayout_interaction_rec_lig_return.setObjectName("gridLayout_interaction_rec_lig_return")
        self.pushButton_analysis_back = QtWidgets.QPushButton(self.page_interaction_analysis)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_analysis_back.sizePolicy().hasHeightForWidth())
        self.pushButton_analysis_back.setSizePolicy(sizePolicy)
        self.pushButton_analysis_back.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_analysis_back.setObjectName("pushButton_analysis_back")
        self.gridLayout_interaction_rec_lig_return.addWidget(self.pushButton_analysis_back, 0, 1, 2, 1)
        self.label_interaction_receptor = QtWidgets.QLabel(self.page_interaction_analysis)
        self.label_interaction_receptor.setStyleSheet("font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */")
        self.label_interaction_receptor.setObjectName("label_interaction_receptor")
        self.gridLayout_interaction_rec_lig_return.addWidget(self.label_interaction_receptor, 0, 0, 1, 1)
        self.label_interaction_ligand = QtWidgets.QLabel(self.page_interaction_analysis)
        self.label_interaction_ligand.setStyleSheet("font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */")
        self.label_interaction_ligand.setObjectName("label_interaction_ligand")
        self.gridLayout_interaction_rec_lig_return.addWidget(self.label_interaction_ligand, 1, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_interaction_rec_lig_return, 0, 0, 1, 1)
        self.tableWidget_interaction_analysis = QtWidgets.QTableWidget(self.page_interaction_analysis)
        self.tableWidget_interaction_analysis.setMinimumSize(QtCore.QSize(470, 350))
        self.tableWidget_interaction_analysis.setStyleSheet("background-color: rgb(160, 160, 160);")
        self.tableWidget_interaction_analysis.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_interaction_analysis.setObjectName("tableWidget_interaction_analysis")
        self.tableWidget_interaction_analysis.setColumnCount(5)
        self.tableWidget_interaction_analysis.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_interaction_analysis.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_interaction_analysis.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_interaction_analysis.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_interaction_analysis.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_interaction_analysis.setHorizontalHeaderItem(4, item)
        self.gridLayout_3.addWidget(self.tableWidget_interaction_analysis, 1, 0, 1, 1)
        self.gridLayout_interaction_save_button = QtWidgets.QGridLayout()
        self.gridLayout_interaction_save_button.setObjectName("gridLayout_interaction_save_button")
        self.pushButton_interaction_save_complex = QtWidgets.QPushButton(self.page_interaction_analysis)
        self.pushButton_interaction_save_complex.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_interaction_save_complex.setObjectName("pushButton_interaction_save_complex")
        self.gridLayout_interaction_save_button.addWidget(self.pushButton_interaction_save_complex, 0, 0, 1, 1)
        self.pushButton_interaction_save_image = QtWidgets.QPushButton(self.page_interaction_analysis)
        self.pushButton_interaction_save_image.setStyleSheet("QPushButton {\n"
"    font: bold 14pt \"微軟正黑體\"; \n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"    background-color: rgb(60, 60, 60); /* 按鈕背景色 */\n"
"    border-radius: 8px; /* 圓角邊框 */\n"
"    border: 1px solid rgb(80, 80, 80); /* 邊框顏色 */\n"
"    padding: 5px 15px; /* 內距，讓按鈕大小適應內容 */\n"
"    \n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100); /* 滑鼠懸停時變色 */\n"
"    border: 1px solid rgb(120, 120, 120);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(30, 30, 30); /* 按下按鈕時變色 */\n"
"    border: 1px solid rgb(150, 150, 150);\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: rgb(30, 30, 30); /* 禁用時變色 */\n"
"    color: rgb(120, 120, 120);\n"
"    border: 1px solid rgb(50, 50, 50);\n"
"}\n"
"")
        self.pushButton_interaction_save_image.setObjectName("pushButton_interaction_save_image")
        self.gridLayout_interaction_save_button.addWidget(self.pushButton_interaction_save_image, 0, 1, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_interaction_save_button, 2, 0, 1, 1)
        self.stackedWidget_analysis.addWidget(self.page_interaction_analysis)
        self.gridLayout_tab_analysis.addWidget(self.stackedWidget_analysis, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_analysis, "")
        self.widget_pymol = QtWidgets.QWidget(self.splitter)
        self.widget_pymol.setMinimumSize(QtCore.QSize(1000, 880))
        self.widget_pymol.setAutoFillBackground(False)
        self.widget_pymol.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.widget_pymol.setObjectName("widget_pymol")
        self.gridLayout_central.addWidget(self.splitter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1517, 27))
        self.menubar.setStyleSheet("QMenuBar {\n"
"    background-color: rgb(43, 43, 43); /* 背景顏色 (深灰色) */\n"
"    color: rgb(255, 255, 255); /* 文字顏色 (白色) */\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"    background: transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    padding: 5px 10px;\n"
"}\n"
"\n"
"QMenuBar::item:selected { /* 滑鼠懸停 */\n"
"    background-color: rgb(255, 255, 255); /* 懸停時的背景色 */\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QMenuBar::item:pressed { /* 按住時 */\n"
"    background-color: rgb(42, 126, 196); /* 按下時的背景色 (深藍色) */\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"QMenu {\n"
"    background-color: rgb(60, 60, 60);  /* 選單背景色 (深灰) */\n"
"    border: 1px solid rgb(100, 100, 100); /* 邊框顏色 */\n"
"    color: rgb(255, 255, 255); /* 文字顏色 */\n"
"}\n"
"\n"
"QMenu::item {\n"
"    padding: 6px 15px; /* 內邊距 */\n"
"    background-color: transparent; /* 預設背景透明 */\n"
"    color: rgb(255, 255, 255); /* 預設文字白色 */\n"
"}\n"
"\n"
"QMenu::item:selected { /* 滑鼠懸停 */\n"
"    background-color: rgb(74, 144, 226); /* 藍色 */\n"
"    color: rgb(255, 255, 255); /* 文字白色 */\n"
"}\n"
"\n"
"QMenu::item:pressed { /* 按住時 */\n"
"    background-color: rgb(42, 126, 196); /* 深藍 */\n"
"    color: rgb(255, 255, 255); /* 文字白色 */\n"
"}\n"
"\n"
"QMenu::separator { /* 分隔線樣式 */\n"
"    height: 1px;\n"
"    background: rgb(120, 120, 120);\n"
"    margin-left: 5px;\n"
"    margin-right: 5px;\n"
"}\n"
"")
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setStyleSheet("")
        self.menuFile.setObjectName("menuFile")
        self.menuOption = QtWidgets.QMenu(self.menubar)
        self.menuOption.setObjectName("menuOption")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.actionFile_format_convert_OpenBabel_3_1 = QtWidgets.QAction(MainWindow)
        self.actionFile_format_convert_OpenBabel_3_1.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionFile_format_convert_OpenBabel_3_1.setObjectName("actionFile_format_convert_OpenBabel_3_1")
        self.actionAdvance_setting = QtWidgets.QAction(MainWindow)
        self.actionAdvance_setting.setObjectName("actionAdvance_setting")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuFile.addAction(self.actionQuit)
        self.menuOption.addAction(self.actionAdvance_setting)
        self.menuOption.addAction(self.actionFile_format_convert_OpenBabel_3_1)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuOption.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.stackedWidget.setCurrentIndex(0)
        self.stackedWidget_analysis.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MergeonDock 0.8.0 beta"))
        self.label_currentmode.setText(_translate("MainWindow", "Mode:"))
        self.comboBox_modeselect.setItemText(0, _translate("MainWindow", "Normal Docking"))
        self.comboBox_modeselect.setItemText(1, _translate("MainWindow", "Flexible Docking"))
        self.pushButton_setupworkdirectory.setText(_translate("MainWindow", "New Project (set up work directory)"))
        self.pushButton_uploadreceptor.setText(_translate("MainWindow", "Receptor"))
        self.pushButton_uploadligands.setText(_translate("MainWindow", "Ligands"))
        self.pushButton_uploadflexible.setText(_translate("MainWindow", "Flexible"))
        item = self.tableWidget_show_receptor.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "👁️"))
        item = self.tableWidget_show_refligands.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ref. Ligands"))
        item = self.tableWidget_show_refligands.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "👁️"))
        item = self.tableWidget_show_ligands.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Ligands"))
        item = self.tableWidget_show_ligands.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "👁️"))
        self.label_center_title.setText(_translate("MainWindow", "Center"))
        self.pushButton_use_ref_ligands.setText(_translate("MainWindow", "From Ref. Ligands or Upload"))
        self.label_centerX.setText(_translate("MainWindow", "X"))
        self.label_centerY.setText(_translate("MainWindow", "Y"))
        self.label_centerZ.setText(_translate("MainWindow", "Z"))
        self.label_size_title.setText(_translate("MainWindow", "Size"))
        self.label_sizeX.setText(_translate("MainWindow", "X"))
        self.label_sizeY.setText(_translate("MainWindow", "Y"))
        self.label_sizeZ.setText(_translate("MainWindow", "Z"))
        self.label_spacing.setText(_translate("MainWindow", "Spacing"))
        self.label_scoring_fucntion.setText(_translate("MainWindow", "Scoring function"))
        self.radioButton_vina.setText(_translate("MainWindow", "Vina"))
        self.radioButton_autodock4.setText(_translate("MainWindow", "Autodock4"))
        self.label_exhaustiveness.setText(_translate("MainWindow", "Exhaustiveness"))
        self.label_pose.setText(_translate("MainWindow", "Pose"))
        self.label_verbosity.setText(_translate("MainWindow", "Log File"))
        self.radioButton_verbosity_1.setText(_translate("MainWindow", "Normal"))
        self.radioButton_verbosity_2.setText(_translate("MainWindow", "Verbose"))
        self.label_cpu.setText(_translate("MainWindow", "CPU"))
        self.lineEdit_cpu.setPlaceholderText(_translate("MainWindow", "Auto"))
        self.label_seed.setText(_translate("MainWindow", "Seed"))
        self.lineEdit_seed.setPlaceholderText(_translate("MainWindow", "Random"))
        self.pushButton_setgridbox.setText(_translate("MainWindow", "Grid box"))
        self.pushButton_setparameter.setText(_translate("MainWindow", "Parameters"))
        self.pushButton_dockingbutton.setText(_translate("MainWindow", "Docking"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_docking), _translate("MainWindow", "Docking"))
        self.label_affinity_filter.setText(_translate("MainWindow", "Affinity Filter : "))
        self.label_affinity_filter_symbol.setText(_translate("MainWindow", "~"))
        self.pushButton_analysis_search.setText(_translate("MainWindow", "🔍"))
        self.pushButton_analysis_reset.setText(_translate("MainWindow", "🔄"))
        item = self.tableWidget_analysis_receptor.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Receptor"))
        item = self.tableWidget_analysis_receptor.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Ref. ligands"))
        item = self.tableWidget_analysis_receptor.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "👁️"))
        self.tableWidget_analysis_ligands.setSortingEnabled(False)
        item = self.tableWidget_analysis_ligands.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget_analysis_ligands.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Affinity"))
        item = self.tableWidget_analysis_ligands.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Log"))
        item = self.tableWidget_analysis_ligands.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "👁️"))
        self.pushButton_analysis_load.setText(_translate("MainWindow", "Load Data"))
        self.pushButton_analysis_add.setText(_translate("MainWindow", "Add Data"))
        self.pushButton_analysis_save_ligand.setText(_translate("MainWindow", "Save ligand as"))
        self.pushButton_analysis_save_image.setText(_translate("MainWindow", "Save image as"))
        self.pushButton_analysis_save_complex.setText(_translate("MainWindow", "Save complex as"))
        self.pushButton_interaction_analysis.setText(_translate("MainWindow", "Interaction analysis"))
        self.pushButton_analysis_back.setText(_translate("MainWindow", "↶"))
        self.label_interaction_receptor.setText(_translate("MainWindow", "Rec:"))
        self.label_interaction_ligand.setText(_translate("MainWindow", "Lig:"))
        item = self.tableWidget_interaction_analysis.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Interaction"))
        item = self.tableWidget_interaction_analysis.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Atom"))
        item = self.tableWidget_interaction_analysis.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Residue"))
        item = self.tableWidget_interaction_analysis.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Distance (Å)"))
        item = self.tableWidget_interaction_analysis.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "👁️"))
        self.pushButton_interaction_save_complex.setText(_translate("MainWindow", "Save session"))
        self.pushButton_interaction_save_image.setText(_translate("MainWindow", "Save image as"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_analysis), _translate("MainWindow", "Analysis"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOption.setTitle(_translate("MainWindow", "Option"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionFile_format_convert_OpenBabel_3_1.setText(_translate("MainWindow", "File format convert (OpenBabel 3.1)"))
        self.actionAdvance_setting.setText(_translate("MainWindow", "Advance setting"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
